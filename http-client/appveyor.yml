# gitversion will change the version number
version: x-{build}

# branches to build
branches:
  # blacklist
  except:
    - gh-pages

configuration: Release
os: Visual Studio 2017

init:
  - git config --global core.autocrlf input
  - git config --global credential.helper store
  - ps: Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:git_token):x-oauth-basic@github.com`n"
  - git config --global user.email "noreply@emanon.org"
  - git config --global user.name "Appveyor CI"

cache:
  - packages -> **\packages.config      # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified

environment:
  COVERALLS_REPO_TOKEN:
    secure: u109t00NLIZQyREMNUyPlMd8gCi6w3o790yT8mQnzEC0LvZyevt+04u63TQfrifC
  git_token:
    secure: NeX5NCOUXsCLc1UjTJjqB9F02FZ8Wq0VsxqTXC8kBdyK6zjxjebrf/9Da2sY1Kql
  snk_secret:
    secure: 5QzEIgiDqTIrZruPaIQIvTlNMl5BZ7TGEps7ALyBfHE=

# tools we need for bulding/testing/deploying
install:
  - choco install gitversion.portable -pre -y
  - nuget update -self
  #- npm install gh-pages -g

#  - nuget install secure-file -ExcludeVersion
#  - if defined snk_secret secure-file\tools\secure-file -decrypt src\ipfs.ci.snk.enc -secret %snk_secret% -out src\ipfs.dev.snk
  - choco install ipfs
  - ipfs init
  - ps: Start-Process -FilePath "ipfs.exe" -ArgumentList "daemon"

# gitversion will change the assembly info
pull_requests:
  do_not_increment_build_number: true

before_build:
  - nuget restore
  - ps: gitversion /output buildserver /updateAssemblyInfo >gitversion.log

build_script:
  - dotnet build -c %CONFIGURATION% -p:Version=%GitVersion_MajorMinorPatch% -p:AssemblyVersion=%GitVersion_MajorMinorPatch%
  - dotnet pack -c %CONFIGURATION% --no-build --no-restore -p:Version=%GitVersion_MajorMinorPatch% -p:AssemblyVersion=%GitVersion_MajorMinorPatch%

after_build:
  - cmd: appveyor PushArtifact "src\bin\%CONFIGURATION%\Ipfs.Api.%GitVersion_MajorMinorPatch%.nupkg"
# Build documentation in doc\_site
#  - tools\docfx\docfx doc\docfx.json
#  - if defined git_token gh-pages -d doc\_site -m "new docs %GitVersion_FullSemVer%"

test_script:
  - dotnet test -c %CONFIGURATION% --no-build --no-restore test

after_test: 
# Generate coverage report
    - packages\OpenCover.4.6.519\tools\OpenCover.Console.exe 
        -register:user -filter:"+[Ipfs.Api*]* -[*Tests]*" 
        -target:"c:\Program Files\dotnet\dotnet.exe" 
        -targetargs:"test -c Release --no-build --no-restore --framework netcoreapp2.0 test" 
        -output:coverage.xml  
        -mergeoutput 
        -hideskipped:File 
        -oldStyle 
    - if defined COVERALLS_REPO_TOKEN 
        packages\coveralls.net.0.6.0\tools\csmacnz.coveralls.exe 
        --opencover -i ./coverage.xml --useRelativePaths --serviceName appveyor --jobId %APPVEYOR_BUILD_NUMBER%

# publish NuGet package on tag build
nuget:
  account_feed: true
  project_feed: true
  disable_publish_on_pr: true
deploy:
- provider: NuGet
  api_key:
    secure: OdmGEj/l0K0ZPDmXAYx+fryCzV012eTrM29ALBuL0waxvwLvrufdDXiI+1iNhWEG
  on:
    appveyor_repo_tag: true
